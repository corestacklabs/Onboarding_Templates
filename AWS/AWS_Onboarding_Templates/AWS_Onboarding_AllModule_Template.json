{
   "AWSTemplateFormatVersion":"2010-09-09",
   "Description":"Creates a new IAM role for your AWS Master account with ReadOnlyAccess permissions needed for CloudOps, Finops & SecOps Bundle",
   "Parameters":{
      "RoleName":{
         "Type":"String",
         "Description":"The name of the IAM role to create. Use alphanumeric and '+=,.@-_' characters.",
         "AllowedPattern":"[\\w+=,.@-]{1,64}",
         "MinLength":"1",
         "MaxLength":"64"
      },
      "ExternalId":{
         "Type":"String",
         "Description":"The external ID can be any word or number that is agreed upon between you and the third-party (Corestack - 028811834831) account. Use alphanumeric and '=,.@:\/-' characters.",
         "AllowedPattern":"[a-zA-Z0-9=,.@:\/-]*",
         "MinLength":"1",
         "MaxLength":"64"
      },
      "AWSCostAndUsageReportCURBucketName":{
         "Type":"String",
         "Description":"The name of the Cost and Usage Report (CUR) S3 bucket name to get Cost details. NOTE: THIS IS AN OPTIONAL PARAMETER, SHOULD BE INCLUDED FOR AWS MANAGEMENT/LINKED/STANDARD ACCOUNTS FOR WHICH CUR IS ENABLED!!!!Use lowercase letters, numbers, periods (.), hyphens (-), and underscores (_)",
         "AllowedPattern":"^[a-z0-9\\.\\-\\_]*$",
         "MinLength":"0",
         "MaxLength":"64"
      },
      "ConfigPermissionInclude":{
         "Type":"String",
         "Description":"Permission to include AWS Config Read Access",
         "Default":"Allow",
         "AllowedValues":[
            "Allow",
            "Deny"
         ]
      },
      "EnforceMFA":{
         "Description":"Flag to enforce MFA (Multi-Factor Authentication) when Assuming the role.",
         "Type":"String",
         "Default":"false",
         "AllowedValues":[
            "true",
            "false"
         ]
      },
      "CoreStackAccountId":{
         "Type":"String",
         "Description":"The AWS Account ID of Corestack.",
         "Default":"028811834831"
      }
   },
   "Conditions":{
      "IncludeMFACondition":{
         "Fn::Equals":[
            {
               "Ref":"EnforceMFA"
            },
            "true"
         ]
      },
      "BucketNotEmpty":{
         "Fn::Not":[
            {
               "Fn::Equals":[
                  {
                     "Ref":"AWSCostAndUsageReportCURBucketName"
                  },
                  ""
               ]
            }
         ]
      },
      "ConfigAllow":{
         "Fn::Not":[
            {
               "Fn::Equals":[
                  {
                     "Ref":"ConfigPermissionInclude"
                  },
                  "Deny"
               ]
            }
         ]
      }
   },
   "Resources":{
      "Role":{
         "Type":"AWS::IAM::Role",
         "Properties":{
            "RoleName":{
               "Ref":"RoleName"
            },
            "AssumeRolePolicyDocument":{
               "Version":"2012-10-17",
               "Statement":[
                  {
                     "Effect":"Allow",
                     "Principal":{
                        "AWS":{
                           "Fn::Join":[
                              "",
                              [
                                 "arn:aws:iam::",
                                 {
                                    "Ref":"CoreStackAccountId"
                                 },
                                 ":root"
                              ]
                           ]
                        }
                     },
                     "Condition":{
                        "Fn::If":[
                           "IncludeMFACondition",
                           {
                              "StringEquals":{
                                 "sts:ExternalId":{
                                    "Ref":"ExternalId"
                                 }
                              },
                              "Bool":{
                                 "aws:MultiFactorAuthPresent":"true"
                              }
                           },
                           {
                              "StringEquals":{
                                 "sts:ExternalId":{
                                    "Ref":"ExternalId"
                                 }
                              }
                           }
                        ]
                     },
                     "Action":[
                        "sts:AssumeRole"
                     ]
                  }
               ]
            },
            "Tags":[
               {
                  "Key":"Purpose",
                  "Value":"CoreStack"
               }
            ]
         }
      },
      "BudgetAndBillingPolicy":{
         "Type":"AWS::IAM::Policy",
         "Properties":{
            "PolicyName":"CoreStack_BudgetAndBillingPolicy",
            "PolicyDocument":{
               "Statement":[
                  {
                     "Sid":"Auth",
                     "Action":[
                        "budgets:ViewBudget",
                        "budgets:DescribeBudgetActionHistories",
                        "budgets:DescribeBudgetActionsForAccount"
                     ],
                     "Effect":"Allow",
                     "Resource":"*"
                  }
               ]
            },
            "Roles":[
               {
                  "Ref":"Role"
               }
            ]
         }
      },
      "SupportAndRIPolicy":{
         "Type":"AWS::IAM::Policy",
         "Properties":{
            "PolicyName":"CoreStack_SupportAndRIPolicy",
            "PolicyDocument":{
               "Statement":[
                  {
                     "Sid":"Auth",
                     "Action":[
                        "ce:GetReservationPurchaseRecommendation",
                        "ce:GetReservationUtilization",
                        "ce:DescribeNotificationSubscription",
                        "ce:GetReservationCoverage",
                        "support:DescribeServices",
                        "support:DescribeSupportLevel",
                        "support:DescribeTrustedAdvisorCheckResult"
                     ],
                     "Effect":"Allow",
                     "Resource":"*"
                  }
               ]
            },
            "Roles":[
               {
                  "Ref":"Role"
               }
            ]
         }
      },
      "AWSCURAccessPolicy":{
         "Type":"AWS::IAM::Policy",
         "Condition":"BucketNotEmpty",
         "Properties":{
            "PolicyName":"CoreStack_AWSCURAccessPolicy",
            "PolicyDocument":{
               "Statement":[
                  {
                     "Sid":"Auth",
                     "Action":[
                        "s3:GetObject"
                     ],
                     "Effect":"Allow",
                     "Resource":{
                        "Fn::Join":[
                           "",
                           [
                              "arn:aws:s3:::",
                              {
                                 "Ref":"AWSCostAndUsageReportCURBucketName"
                              },
                              "/*"
                           ]
                        ]
                     }
                  }
               ]
            },
            "Roles":[
               {
                  "Ref":"Role"
               }
            ]
         }
      },
      "ComputeOptimizerPolicy":{
         "Type":"AWS::IAM::Policy",
         "Properties":{
            "PolicyName":"CoreStack_ComputeOptimizerPolicy",
            "PolicyDocument":{
               "Statement":[
                  {
                     "Sid":"Auth",
                     "Action":[
                        "compute-optimizer:DescribeRecommendationExportJobs",
                        "compute-optimizer:GetAutoScalingGroupRecommendations",
                        "compute-optimizer:GetEBSVolumeRecommendations",
                        "compute-optimizer:GetEC2InstanceRecommendations",
                        "compute-optimizer:GetEC2RecommendationProjectedMetrics",
                        "compute-optimizer:GetECSServiceRecommendationProjectedMetrics",
                        "compute-optimizer:GetECSServiceRecommendations",
                        "compute-optimizer:GetEffectiveRecommendationPreferences",
                        "compute-optimizer:GetEnrollmentStatus",
                        "compute-optimizer:GetLambdaFunctionRecommendations",
                        "compute-optimizer:GetRecommendationPreferences",
                        "compute-optimizer:GetRecommendationSummaries"
                     ],
                     "Effect":"Allow",
                     "Resource":"*"
                  }
               ]
            },
            "Roles":[
               {
                  "Ref":"Role"
               }
            ]
         }
      },
      "ConfigPermission":{
         "Type":"AWS::IAM::Policy",
         "Condition":"ConfigAllow",
         "Properties":{
            "PolicyName":"CoreStack_ConfigPermission",
            "PolicyDocument":{
               "Statement":[
                  {
                     "Sid":"Auth",
                     "Action":[
                        "config:DescribeConfigRuleEvaluationStatus",
                        "config:DescribeConfigurationRecorderStatus", 
                        "config:DescribeConfigurationRecorders",
                        "config:GetComplianceDetailsByConfigRule",
                        "config:ListDiscoveredResources"
                     ],
                     "Effect":"Allow",
                     "Resource":"*"
                  }
               ]
            },
            "Roles":[
               {
                  "Ref":"Role"
               }
            ]
         }
      },
      "ThreatManagement":{
         "Type":"AWS::IAM::Policy",
         "Properties":{
            "PolicyName":"CoreStack_ThreatManagementPolicy",
            "PolicyDocument":{
               "Statement":[
                  {
                     "Sid":"Auth",
                     "Action":[
                        "guardduty:DescribePublishingDestination",
                        "guardduty:GetDetector",
                        "guardduty:GetFindings",
                        "guardduty:ListDetectors",
                        "guardduty:ListFindings",
                        "guardduty:ListPublishingDestinations",
                        "iam:GetRole",
                        "kms:Describe*",
                        "kms:Get*",
                        "kms:List*",
                        "s3:GetBucketNotification",
                        "s3:GetBucketPolicy",
                        "s3:GetBucketTagging",
                        "s3:HeadBucket",
                        "s3:ListBucket"
                     ],
                     "Effect":"Allow",
                     "Resource":"*"
                  }
               ]
            },
            "Roles":[
               {
                  "Ref":"Role"
               }
            ]
         }
      },
      "VulnerabilityAssessments":{
         "Type":"AWS::IAM::Policy",
         "Properties":{
            "PolicyName":"CoreStack_VulnerabilityAssessmentPolicy",
            "PolicyDocument":{
               "Statement":[
                  {
                     "Sid":"Auth",
                     "Action":[
                        "inspector:DescribeAssessmentRuns",
                        "inspector:DescribeFindings",
                        "inspector:DescribeRulesPackages",
                        "inspector:ListAssessmentRuns",
                        "inspector:ListAssessmentTargets",
                        "inspector:ListAssessmentTemplates",
                        "inspector:ListFindings",
                        "inspector:ListRulesPackages"
                     ],
                     "Effect":"Allow",
                     "Resource":"*"
                  }
               ]
            },
            "Roles":[
               {
                  "Ref":"Role"
               }
            ]
         }
      },
      "InventoryReadPolicy":{
         "Type":"AWS::IAM::Policy",
         "Properties":{
            "PolicyName":"CoreStack_InventoryReadPolicy",
            "PolicyDocument":{
               "Statement":[
                  {
                     "Sid":"Auth",
                     "Action":[
                        "access-analyzer:List*",
                        "acm:DescribeCertificate",
                        "acm:GetCertificate",
                        "acm:ListCertificates",
                        "acm:ListTagsForCertificate",
                        "apigateway:GET",
                        "application-autoscaling:DescribeScheduledActions",
                        "appstream:Describe*",
                        "appstream:ListAssociatedFleets",
                        "appstream:ListAssociatedStacks",
                        "appsync:ListGraphqlApis",
                        "athena:List*",
                        "autoscaling:Describe*",
                        "backup:GetBackupPlan",
                        "backup:ListBackupJobs",
                        "backup:ListBackupVaults",
                        "batch:Describe*",
                        "clouddirectory:DescribeDirectories",
                        "clouddirectory:GetDirectory",
                        "clouddirectory:ListDirectories",
                        "cloudformation:DescribeStacks",
                        "cloudformation:GetStackPolicy",
                        "cloudformation:GetTemplate",
                        "cloudformation:ListStackResources",
                        "cloudformation:ListStacks",
                        "cloudfront:Get*",
                        "cloudfront:List*",
                        "cloudhsm:Describe*",
                        "cloudhsm:List*",
                        "cloudsearch:DescribeDomains",
                        "codeartifact:DescribeDomain",
                        "codeartifact:ListDomains",
                        "codebuild:ListProjects",
                        "codepipeline:List",
                        "cognito-identity:Describe*",
                        "cognito-identity:Get*",
                        "cognito-identity:ListIdentityPools",
                        "cognito-idp:ListUserPools",
                        "cognito-user:Describe*",
                        "cognito-user:List*",
                        "datapipeline:DescribePipelines",
                        "datapipeline:GetPipelineDefinition",
                        "datapipeline:ListPipelines",
                        "directconnect:Describe*",
                        "dms:Describe*",
                        "dms:ListTagsForResource",
                        "ds:DescribeDirectories",
                        "dynamodb:Describe*",
                        "dynamodb:List*",
                        "ec2:Describe*",
                        "ec2:GetEbsEncryptionByDefault",
                        "ecr-public:DescribeRepositories",
                        "ecr-public:GetRepositoryCatalogData",
                        "ecr:BatchGetImage",
                        "ecr:BatchImportUpstreamImage",
                        "ecr:DescribeImages",
                        "ecr:DescribeRepositories",
                        "ecr:GetLifecyclePolicy",
                        "ecr:GetLifecyclePolicyPreview",
                        "ecs:Describe*",
                        "ecs:List*",
                        "eks:Describe*",
                        "eks:List*",
                        "elasticache:Describe*",
                        "elasticache:ListAllowedNodeTypeModifications",
                        "elasticache:ListTagsForResource",
                        "elasticbeanstalk:Describe*",
                        "elasticfilesystem:Describe*",
                        "elasticfilesystem:ListTagsForResource",
                        "elasticloadbalancing:Describe*",
                        "elasticmapreduce:Describe*",
                        "elasticmapreduce:List*",
                        "es:Describe*",
                        "es:ListDomainNames",
                        "es:ListElasticsearchInstanceTypes",
                        "fsx:DescribeBackups",
                        "fsx:DescribeFileSystems",
                        "glacier:Describe*",
                        "glacier:List*",
                        "glue:Get*",
                        "glue:List*",
                        "iam:SimulatePrincipalPolicy",
                        "iam:GenerateCredentialReport",
				            "iam:GenerateOrganizationsAccessReport",
				            "iam:GenerateServiceLastAccessedDetails",
                        "iot:DescribeThing",
                        "iot:ListThings",
                        "kafka:Describe*",
                        "kafka:List*",
                        "kinesis:DescribeStream",
                        "kinesis:GetShardIterator",
                        "kinesis:ListStreams",
                        "kinesis:ListTagsForStream",
                        "lambda:Get*",
                        "lambda:List*",
                        "lex:GetBots",
                        "lightsail:DeleteRelationalDatabaseSnapshot",
                        "lightsail:Get*",
                        "logs:DescribeLogGroups",
                        "logs:DescribeLogStreams",
                        "logs:GetLogEvents",
                        "logs:ListTagsForResource",
                        "mgh:DescribeApplicationState",
                        "mgh:ListApplicationStates",
                        "mq:DescribeBroker",
                        "mq:ListBrokers",
                        "opsworks:DescribeStacks",
                        "opsworks:DescribeStackSummary",
                        "opsworks:DescribeUserProfiles",
                        "organizations:Describe*",
                        "organizations:List*",
                        "pi:GetResourceMetrics",
                        "qldb:DescribeLedger",
                        "quicksight:Describe*",
                        "quicksight:List*",
                        "rds:Describe*",
                        "rds:List*",
                        "redshift:Describe*",
                        "rekognition:DescribeProjects",
                        "resource-groups:ListGroups",
                        "route53:GetTrafficPolicy",
                        "route53:GetTrafficPolicyInstance",
                        "route53:List*",
                        "route53resolver:ListResolverEndpoints",
                        "route53resolver:ListResolverRules",
                        "s3:GetAccountPublicAccessBlock",
                        "s3:GetEncryptionConfiguration",
                        "s3:GetLifecycleConfiguration",
                        "s3:GetNotificationConfiguration",
                        "s3:ListAllMyBuckets",
                        "s3:ListMultipartUploadParts",
                        "sagemaker:List*",
                        "sdb:DomainMetadata",
                        "sdb:ListDomains",
                        "secretsmanager:Describe*",
                        "secretsmanager:List*",
                        "securityhub:DescribeStandards",
                        "securityhub:DescribeHub",
                        "securityhub:GetAdministratorAccount",
                        "securityhub:GetFindings",
                        "servicecatalog:Describe*",
                        "servicecatalog:List*",
                        "ses:ListConfigurationSets",
                        "sheild:DescribeProtection",
                        "sheild:ListProtections",
                        "sns:Get*",
                        "sns:List*",
                        "sqs:Get*",
                        "sqs:List*",
                        "sqs:ReceiveMessage",
                        "ssm:Describe*",
                        "ssm:Get*",
                        "ssm:List*",
                        "states:ListActivities",
                        "states:ListStateMachines",
                        "states:ListTagsForResource",
                        "storagegateway:Describe*",
                        "storagegateway:List*",
                        "swf:List*",
                        "synthetics:DescribeCanaries",
                        "transfer:ListServers",
                        "waf-regional:Get*",
                        "waf-regional:List*",
                        "waf:Get*",
                        "waf:List*",
                        "wafv2:Get*",
                        "wafv2:List*",
                        "workmail:Describe*",
                        "workmail:List*",
                        "workspaces:Describe*",
                        "xray:GetGroups",
                        "xray:GetSamplingRules"
                     ],
                     "Effect":"Allow",
                     "Resource":"*"
                  }
               ]
            },
            "Roles":[
               {
                  "Ref":"Role"
               }
            ]
         }
      },
      "ActivityPolicy":{
         "Type":"AWS::IAM::Policy",
         "Properties":{
            "PolicyName":"CoreStack_ActivityPolicy",
            "PolicyDocument":{
               "Statement":[
                  {
                     "Sid":"Auth",
                     "Action":[
                        "cloudtrail:DescribeTrails",
                        "cloudtrail:Get*",
                        "cloudtrail:ListTrails",
                        "cloudtrail:LookupEvents",
                        "iam:Get*",
                        "iam:List*",
                        "s3:GetBucketLocation",
                        "s3:GetBucketTagging",
                        "s3:HeadBucket",
                        "s3:ListObjects"
                     ],
                     "Effect":"Allow",
                     "Resource":"*"
                  }
               ]
            },
            "Roles":[
               {
                  "Ref":"Role"
               }
            ]
         }
      },
      "AlertPolicy":{
         "Type":"AWS::IAM::Policy",
         "Properties":{
            "PolicyName":"CoreStack_AlertPolicy",
            "PolicyDocument":{
               "Statement":[
                  {
                     "Sid":"Auth",
                     "Action":[
                        "cloudwatch:Describe*",
                        "cloudwatch:Get*",
                        "cloudwatch:List*"
                     ],
                     "Effect":"Allow",
                     "Resource":"*"
                  }
               ]
            },
            "Roles":[
               {
                  "Ref":"Role"
               }
            ]
         }
      }
   },
   "Outputs":{
      "RoleARN":{
         "Description":"ARN of the IAM Role.",
         "Value":{
            "Fn::GetAtt":[
               "Role",
               "Arn"
            ]
         }
      },
      "ExternalId":{
         "Description":"ExternalId used in Role trusted policy.",
         "Value":{
            "Ref":"ExternalId"
         }
      },
      "MFAEnabled":{
         "Description":"Flag to identify MFA enforced for the role or not.",
         "Value":{
            "Ref":"EnforceMFA"
         }
      }
   }
}
